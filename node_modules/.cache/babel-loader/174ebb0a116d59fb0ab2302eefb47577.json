{"ast":null,"code":"var _jsxFileName = \"/Users/norah/Downloads/react example/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport List from \"./components/List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [number, setNumber] = useState();\n  const [text, setText] = useState();\n  const [list, setList] = useState([{\n    number: 1,\n    text: \"a\"\n  }, {\n    number: 2,\n    text: \"b\"\n  }]);\n\n  const addItem = e => {\n    const item = {\n      number,\n      text\n    }; // const item = {number:number, text:text}\n\n    const array = list.slice();\n    array.push(item);\n    setList(array);\n  };\n\n  const changeText = e => {\n    const value = e.target.value;\n    setText(value);\n  };\n\n  const changeNumber = e => {\n    const value = e.target.value;\n    setNumber(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      list: list,\n      setList: setList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      onChange: changeNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: changeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6y9fnAr/lLM+KTjwQiX7PIAIKjA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/norah/Downloads/react example/src/App.js"],"names":["useState","List","App","number","setNumber","text","setText","list","setList","addItem","e","item","array","slice","push","changeText","value","target","changeNumber"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,EAApC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAC/B;AAAEG,IAAAA,MAAM,EAAE,CAAV;AAAaE,IAAAA,IAAI,EAAE;AAAnB,GAD+B,EAE/B;AAAEF,IAAAA,MAAM,EAAE,CAAV;AAAaE,IAAAA,IAAI,EAAE;AAAnB,GAF+B,CAAD,CAAhC;;AAQA,QAAMI,OAAO,GAAIC,CAAD,IAAO;AACrB,UAAMC,IAAI,GAAG;AAAER,MAAAA,MAAF;AAAUE,MAAAA;AAAV,KAAb,CADqB,CAErB;;AACA,UAAMO,KAAK,GAAGL,IAAI,CAACM,KAAL,EAAd;AACAD,IAAAA,KAAK,CAACE,IAAN,CAAWH,IAAX;AACAH,IAAAA,OAAO,CAACI,KAAD,CAAP;AACD,GAND;;AAQA,QAAMG,UAAU,GAAIL,CAAD,IAAO;AACxB,UAAMM,KAAK,GAAGN,CAAC,CAACO,MAAF,CAASD,KAAvB;AACAV,IAAAA,OAAO,CAACU,KAAD,CAAP;AACD,GAHD;;AAKA,QAAME,YAAY,GAAIR,CAAD,IAAO;AAC1B,UAAMM,KAAK,GAAGN,CAAC,CAACO,MAAF,CAASD,KAAvB;AACAZ,IAAAA,SAAS,CAACY,KAAD,CAAT;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAET,IAAZ;AAAkB,MAAA,OAAO,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,QAAQ,EAAEU;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEH;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEN,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArCQP,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport List from \"./components/List\";\n\nfunction App() {\n  const [number, setNumber] = useState()\n  const [text, setText] = useState()\n  const [list, setList] = useState([\n    { number: 1, text: \"a\" },\n    { number: 2, text: \"b\" },\n  ]);\n \n\n\n\n  const addItem = (e) => {\n    const item = { number, text };\n    // const item = {number:number, text:text}\n    const array = list.slice()\n    array.push(item);\n    setList(array)\n  };\n\n  const changeText = (e) => {\n    const value = e.target.value;\n    setText(value)\n  };\n\n  const changeNumber = (e) => {\n    const value = e.target.value;\n    setNumber(value)\n  };\n\n  return (\n    <div>\n      <List list={list} setList={setList}/>\n      <input type=\"number\" onChange={changeNumber} />\n      <input type=\"text\" onChange={changeText} />\n      <button onClick={addItem}>Add</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}